{"ast":null,"code":"var _jsxFileName = \"/workspace/testbankSlave/tbslave/src/Routes/FileReader.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FileReader() {\n  class FileUpload extends Component {\n    onFileChange(e) {\n      let file = e.target.files[0];\n      let fileReader = new FileReader();\n      fileReader.onload = () => {\n        console.log(fileReader.result);\n      };\n      fileReader.readAsText(file);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"docpicker\",\n      onChange: e => {\n        console.log(e.target.files[0]);\n        let copyFile = [...e.target.files][0];\n        console.log(copyFile);\n        readFile(copyFile, () => {\n          console.log(\"read\");\n        });\n      },\n      accept: \".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_c = FileReader;\nexport default FileReader;\nvar _c;\n$RefreshReg$(_c, \"FileReader\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","FileReader","FileUpload","Component","onFileChange","e","file","target","files","fileReader","onload","console","log","result","readAsText","children","type","id","onChange","copyFile","readFile","accept","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/workspace/testbankSlave/tbslave/src/Routes/FileReader.js"],"sourcesContent":["import React from 'react';\n\nfunction FileReader() {\n\t\nclass FileUpload extends Component {\n  onFileChange(e){\n    let file = e.target.files[0];\n    let fileReader = new FileReader();\n    fileReader.onload = () => {\n      console.log(fileReader.result);\n    };\n    fileReader.readAsText(file);\n  }\n}\n\t\n  return (\n    <>\n\t\t<input type=\"file\" id=\"docpicker\"\n\t\t  onChange = {(e)=>{\n\t\t\t  console.log(e.target.files[0]);\n\t\t\t  let copyFile = [...e.target.files][0];\n\t\t\t  console.log(copyFile);\t\t\t  \n\t\t\t  readFile(copyFile, ()=>{\n\t\t\t\t  console.log(\"read\")\n\t\t\t  })\n\t\t  }}\n\t\t  accept=\".doc,.docx,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document\"/>\n    </>\n  );\n}\n\nexport default FileReader;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAEtB,MAAMC,UAAU,SAASC,SAAS,CAAC;IACjCC,YAAYA,CAACC,CAAC,EAAC;MACb,IAAIC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAC5B,IAAIC,UAAU,GAAG,IAAIR,UAAU,CAAC,CAAC;MACjCQ,UAAU,CAACC,MAAM,GAAG,MAAM;QACxBC,OAAO,CAACC,GAAG,CAACH,UAAU,CAACI,MAAM,CAAC;MAChC,CAAC;MACDJ,UAAU,CAACK,UAAU,CAACR,IAAI,CAAC;IAC7B;EACF;EAEE,oBACER,OAAA,CAAAE,SAAA;IAAAe,QAAA,eACFjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,EAAE,EAAC,WAAW;MAC/BC,QAAQ,EAAKb,CAAC,IAAG;QAChBM,OAAO,CAACC,GAAG,CAACP,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAIW,QAAQ,GAAG,CAAC,GAAGd,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QACrCG,OAAO,CAACC,GAAG,CAACO,QAAQ,CAAC;QACrBC,QAAQ,CAACD,QAAQ,EAAE,MAAI;UACtBR,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACpB,CAAC,CAAC;MACH,CAAE;MACFS,MAAM,EAAC;IAAuG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC9G,CAAC;AAEP;AAACC,EAAA,GA3BQzB,UAAU;AA6BnB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}